(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{234:function(t,s,a){t.exports=a.p+"assets/img/2ec65b.32ec65ba.gif"},259:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"js的真真假假，看完会更清晰"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js的真真假假，看完会更清晰","aria-hidden":"true"}},[t._v("#")]),t._v(" JS的真真假假，看完会更清晰")]),t._v(" "),e("p",[t._v("Javascript的true和false很灵活，刚接触的时候用得很欢快，js真是智能，还能自动转换数据类型，太方便了，所以对于下面的情况的时候，大家不会觉得奇怪：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),e("p",[t._v("不过越是智能的东西越不要太相信了（比如说人），有时候会自作聪明的。")]),t._v(" "),e("p",[t._v("最近发现，有一位很有耐心的人做了这样一张表：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(234),alt:"JS Comparison Table"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"http://dorey.github.io/JavaScript-Equality-Table/",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里打开 JS Comparison Table"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("确实很方便直观，但如果每次都来查表、甚至想背下来，估计难度不小，平时如果遇到了，也多是“噢，原来这里该这样”就过去了，谈到具体的原理，大家都说，啊，这是js的特点，因为js会进行类型转换，怎么转换的？好像没有太多讨论，最后就产生了js是在进行暗箱操作的感觉。")]),t._v(" "),e("p",[t._v("“被教育”最多的话就是：js里面的"),e("code",[t._v("==")]),t._v("是恶魔，和"),e("code",[t._v("eval")]),t._v("一样不要用，判断等不等要用"),e("code",[t._v("===")]),t._v("\n我：哦")]),t._v(" "),e("p",[t._v("（然后一直带着不安的心情在使用"),e("code",[t._v("==")]),t._v("）")]),t._v(" "),e("p",[t._v("直到最近，看到这样一条奇怪的语句：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ha"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"ha"')]),t._v("\n")])])]),e("p",[t._v("这个怎么解释？是js的设计bug？我觉得不会吧，计算机也是人造的，总还是有规律的，即便是看起来的bug，也是有原理的。")]),t._v(" "),e("p",[t._v("我觉得以及忍无可忍了，必！须！知！道！原！理！")]),t._v(" "),e("p",[t._v("老规矩，先到MDN上面看看呗，哦，真幸运，果然找到了想要的原理。简单挑选了几条，涉及到"),e("code",[t._v("==")]),t._v("的判断原则、以及"),e("code",[t._v("if")]),t._v("中的条件判断原则。\n")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("使用==比较的时候")]),t._v(" "),e("p",[t._v("当比较的两边类型一样时候，比较容易，这里略过，只讨论类型不同时的比较。")]),t._v(" "),e("ul",[e("li",[t._v("number和string比较的时候，string会被转换为number值")]),t._v(" "),e("li",[t._v("==两边的比较方如果有一方是Boolean类型，Boolean为true的时候会被转换为1，false时候转换为+0")]),t._v(" "),e("li",[t._v("object和number或string比较，object被通过valueOf和toString方法转换为它的原始值（primitive value）——为String或者Number值；如果转换失败，会报错（runtime error运行时错误）")])]),t._v(" "),e("p",[t._v("特别注意：String对象是对象而不是String，好在平时很少这样写字符串；类似的还有Number和Boolean对象。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("使用<=比较的时候，先都转换为原始值（primitives），然后转换为相同的类型进行比较。")])]),t._v(" "),e("li",[e("p",[t._v("条件判断condition中（特指if语句里面的条件），除了 "),e("code",[t._v("undefined")]),t._v(", "),e("code",[t._v("null")]),t._v(", "),e("code",[t._v("0")]),t._v(", "),e("code",[t._v("NaN")]),t._v(", 空string "),e("code",[t._v('""')]),t._v("之外的值、加上所有的object，都为true。这个好理解多了，简单一句话。")])])]),t._v(" "),e("p",[t._v("总算明白，心里畅快多了。我还是会继续使用"),e("code",[t._v("==")]),t._v("的。")]),t._v(" "),e("p",[t._v("最后再感叹一句，还是计算机靠谱，计算机是人类忠实的朋友，之一。")]),t._v(" "),e("p",[t._v("参考资料：")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN：Comparison operators"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Truth, Equality and JavaScript"),e("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=r.exports}}]);